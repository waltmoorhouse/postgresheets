name: Publish extension on PR merge

on:
  pull_request:
    types: [closed]

permissions:
  id-token: write
  contents: write
  pull-requests: read
  issues: read
  statuses: write

jobs:
  publish-on-merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install svelte-preprocess (needed for webview build)
        run: npm install -D svelte-preprocess

      - uses: actions-ecosystem/action-release-label@v1
        id: version-label
        with:
          label_prefix: version-

      - uses: AnnuletConsulting/action-get-latest-tag@v1
        id: get-latest-tag

      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ steps.version-label.outputs.level || 'patch' }}

      - name: Update package.json with new version
        env:
          NEW_VERSION: ${{ steps.bump-semver.outputs.new_version }}
        run: |
          echo "Setting package.json version to $NEW_VERSION"
          npm version "$NEW_VERSION" --no-git-tag-version

      - uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: '${{ steps.bump-semver.outputs.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'

      - name: Install dependencies
        run: |
          npm install -D svelte-preprocess
          npm ci
          npm ci --prefix webview

      - name: Build webview assets
        working-directory: ./webview
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Build extension
        run: npm run vscode:package

      - name: Find generated VSIX
        id: find_vsix
        run: |
          echo "Searching for .vsix files in the workspace..."
          VSIX_PATH=$(find . -type f -name "*.vsix" | head -n 1 || true)
          if [ -z "$VSIX_PATH" ]; then
            echo "No .vsix file found" >&2
            echo "vsix_found=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "Found VSIX: $VSIX_PATH"
          echo "vsix_path=$VSIX_PATH" >> $GITHUB_OUTPUT
          echo "vsix_found=true" >> $GITHUB_OUTPUT

      - name: Publish to Visual Studio Marketplace
        env:
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
        if: ${{ env.VSCE_TOKEN != '' }}
        run: |
          echo "Publishing to Visual Studio Marketplace..."
          npx vsce publish -p "$VSCE_TOKEN"

      - name: Create GitHub Release for new tag
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bump-semver.outputs.new_version }}
          release_name: ${{ steps.bump-semver.outputs.new_version }}
          body: 'Release created by publish-on-merge workflow (automated).'
          draft: false
          prerelease: false

      - name: Upload VSIX to GitHub Release
        if: steps.find_vsix.outputs.vsix_found == 'true'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_vsix.outputs.vsix_path }}
          asset_name: ${{ steps.find_vsix.outputs.vsix_path }}
          asset_content_type: application/octet-stream
